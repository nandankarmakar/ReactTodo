[{"D:\\ReactProject\\thetodoapp\\src\\index.js":"1","D:\\ReactProject\\thetodoapp\\src\\App.js":"2","D:\\ReactProject\\thetodoapp\\src\\reportWebVitals.js":"3","D:\\ReactProject\\thetodoapp\\src\\components\\Form.js":"4","D:\\ReactProject\\thetodoapp\\src\\components\\TodoList.js":"5","D:\\ReactProject\\thetodoapp\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1772,"mtime":1611429281379,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1151,"mtime":1611424240030,"results":"11","hashOfConfig":"8"},{"size":584,"mtime":1611424914734,"results":"12","hashOfConfig":"8"},{"size":838,"mtime":1611390882135,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1tupli",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"D:\\ReactProject\\thetodoapp\\src\\index.js",[],["28","29"],"D:\\ReactProject\\thetodoapp\\src\\App.js",["30"],"import React,{useState,useEffect} from 'react'\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nconst App=()=>{\n  //States\n  const [inputText,setInputText]=useState(\"\")\n  const [todos,setTodos]=useState([])\n  const [status,setStatus]=useState('all')\n  const [filteredTodos,setFilteredTodos]=useState([])\n  //Functions\n  const filterHandler=()=>{\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo=>todo.completed===true))\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo=>todo.completed===false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;    \n    }\n  }\n\n  useEffect(()=>{\n    getLocalTodos()\n  },[])\n  \n  useEffect(() => {\n      filterHandler()\n      saveLocalTodos()\n      \n  }, [todos,status])\n\n \n\n  //Saving to LocalStorage\n\n  const saveLocalTodos=()=>{\n    \n      localStorage.setItem('todos',JSON.stringify(todos))\n    \n  }\n\n  const getLocalTodos=()=>{\n     if(localStorage.getItem('todos')===null){\n      localStorage.setItem('todos',JSON.stringify([]))\n    }\n    else{\n     let todoLocal=JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal)\n    }\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Todo List</h1> \n      </header>\n      <span className='foot'>\n       Made with <i className=\"fa fa-heart pulse\">  </i> by Nandan\n      </span>\n      <Form \n        todos={todos} \n        inputText={inputText}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        />\n      <TodoList \n      setTodos={setTodos}\n      todos={todos}\n      filteredTodos={filteredTodos}/>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","D:\\ReactProject\\thetodoapp\\src\\reportWebVitals.js",[],"D:\\ReactProject\\thetodoapp\\src\\components\\Form.js",[],"D:\\ReactProject\\thetodoapp\\src\\components\\TodoList.js",[],"D:\\ReactProject\\thetodoapp\\src\\components\\Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":35,"column":6,"nodeType":"37","endLine":35,"endColumn":20,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"44","text":"45"},[842,856],"[todos, status, filterHandler, saveLocalTodos]"]